#반전 수가 k개인 길이 n의 순열을 찾는 방법
n,k = map(int,input().split())

#[1,2,3,4,..,n]에서 시작해서 
#0번 원소를 맨 뒤로 보내면 n-1,n-2,n-3,...개씩 증가하므로...
#이 작업을 몇번 해야하는지 구한다
A = list(range(1,n+1))

i = 1

while k > n-i:
    
    k -= (n-i)
    i += 1

#i = 3으로 나오면?
#0번 > n-1
#1번 > n-2로 보내는 작업을 할 수 있다는 뜻
#[1,2,3,4,5,...]에서 index = 1번까지 1,2를 맨 뒤로 보내야한다는 뜻

#그렇지만 반복문 끝나면 i = 3이므로, i -= 1

i -= 1

#[1,2,3,4,5]에서 [1,2]를 뒤로 보내야한다면
#[1,2]
#[3,4,5]로 나누고
#[1,2]에서 순서대로 빼서 [3,4,5]에 넣으면 [3,4,5,2,1]이 된다
stack = A[:i]
B = A[i:]

while stack:
    
    B.append(stack.pop())

#남은 k값 만큼 B배열에서 인접한 수끼리 왼쪽에서 차례대로 교환해주고 k를 1씩 빼준다
#k가 0이 되는 순간 해당 B배열이 정답
for i in range(n-1):
    
    if k == 0:
        
        break
    
    B[i],B[i+1] = B[i+1],B[i]
    k -= 1

print(*B)