#모든 연속하는 부분수열의 XOR을 더한 값
n = int(input())

A = list(map(int,input().split()))

#연속하는 부분수열의 XOR을 구하기 위해
#V배열 V0 = 0, Vi = A0 ^ A1 ^ A2 ^...^Ai를 구해놓는다.
V = [0,A[0]]

for i in range(1,n):
    
    V.append(V[-1]^A[i])

#A의 원소가 최대 10^9로 2진수로 바꾸면 30비트
#구하고자하는 값을 2진수로 나타낸다면..
#(a+b+c+...)2^k + (d+e+f+...)2^k-1 + ... + (x+y+z+...)*2 + (p+q+r+...)
#k번째 비트에 주목해서 각 비트가 1인 원소의 개수를 세면 된다.
#두 원소의 XOR로 비트가 1일려면 두 원소의 k번째 비트가 서로 달라야한다.
#따라서 전체 합의 k번째 비트 = (A의 k번째 비트가 0인 원소의 수) * (A의 k번째 비트가 1인 원소의 수)
bit = [0]*31

for k in range(31):
    
    for v in V:
        
        if v & (1 << k): #v의 k번째 비트가 1인지 0인지 판단하는 방법
            
            bit[k] += 1

#각 비트별로 1인 원소의 개수를 모두 찾았다면...
#(비트가 1인 개수) * 2^{k}를 모든 k=0,1,2,..에 대해 더하면 10진수로 바꿀 수 있다.
answer = 0

for i in range(31):
    
    answer += (bit[i]*(len(V)-bit[i])*(2**i))

print(answer)