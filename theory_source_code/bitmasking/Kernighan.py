#이진수에서 1인 비트의 개수를 세는 알고리즘
#n-1을 하면 n의 가장 오른쪽에 있는 1인 비트 이후를 모두 반전시킴
#n & (n-1)은 n의 가장 오른쪽에 있는 1인 비트 이후가 모두 0이 되므로, 가장 오른쪽에 있는 1인 비트를 삭제함
#따라서, 이를 반복하면 1인 비트의 개수만큼 반복하여 0으로 만드므로 1인 비트의 개수를 셀 수 있음

n = int(input())

count = 0

while n > 0:
    
    n &= (n-1)
    count += 1

print(count)

"""
#단순하게 비트열을 순회하여 1의 개수를 세는 알고리즘
#n & 1은 n의 마지막 비트와 1의 &연산으로 n의 마지막 비트가 1이면 1
#n >> 1은 n의 모든 비트를 오른쪽으로 1칸 움직여서 마지막 비트를 삭제함
#n의 비트 수만큼 반복하여 1인 비트를 찾게 됨
n = int(input())

count = 0

while n > 0:

    count += n & 1
    n >>= 1

print(count)
"""